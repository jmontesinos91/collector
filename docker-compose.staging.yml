services:
  db:
    container_name: ${SERVICE_NAME}-db
    image: postgres:15.2
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}

  go-ms-collector:
    image: $DOCKER_IMAGE_REGISTRY:$CI_COMMIT_BRANCH-1.0.0
    container_name: ${CI_PROJECT_NAME}
    ports:
      - "${APP_PORT}:8081"
    depends_on:
      db:
        condition: service_healthy
    environment:
      GITLAB_TOKEN: ${GITLAB_TOKEN}
      DATABASE_DSN: ${DATABASE_DSN}
      OLDDATABASE_DSN: ${OLD_DATABASE_DSN}
      OMNIVIEW_SERVER: ${OMNIVIEW_SERVER}
      KAFKA_SERVERS: ${KAFKA_SERVERS}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
    logging:
      driver: "json-file"
      options:
        max-size: "512m"
        max-file: "6"

volumes:
  postgres_db:
// Code generated by mockery v2.26.1. DO NOT EDIT.

package routermock

import (
	context "context"

	router "github.com/jmontesinos91/collector/internal/repositories/router"
	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// ValidateIMEI provides a mock function with given fields: ctx, request
func (_m *IClient) ValidateIMEI(ctx context.Context, request router.Request) (*router.Response, error) {
	ret := _m.Called(ctx, request)

	var r0 *router.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, router.Request) (*router.Response, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, router.Request) *router.Response); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*router.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, router.Request) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIClient(t mockConstructorTestingTNewIClient) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
